/* tslint:disable */
/* eslint-disable */
/**
 * TAPO Apartments API
 * API for TAPO Apartments website
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UnavailableDateRange
 */
export interface UnavailableDateRange {
    /**
     * Start date of the unavailable period
     * @type {Date}
     * @memberof UnavailableDateRange
     */
    startDate: Date;
    /**
     * End date of the unavailable period
     * @type {Date}
     * @memberof UnavailableDateRange
     */
    endDate: Date;
    /**
     * Source of the unavailable dates (e.g., "website", "bookingcom")
     * @type {string}
     * @memberof UnavailableDateRange
     */
    source: UnavailableDateRangeSourceEnum;
}


/**
 * @export
 */
export const UnavailableDateRangeSourceEnum = {
    Website: 'website',
    Bookingcom: 'bookingcom'
} as const;
export type UnavailableDateRangeSourceEnum = typeof UnavailableDateRangeSourceEnum[keyof typeof UnavailableDateRangeSourceEnum];


/**
 * Check if a given object implements the UnavailableDateRange interface.
 */
export function instanceOfUnavailableDateRange(value: object): value is UnavailableDateRange {
    if (!('startDate' in value) || value['startDate'] === undefined) return false;
    if (!('endDate' in value) || value['endDate'] === undefined) return false;
    if (!('source' in value) || value['source'] === undefined) return false;
    return true;
}

export function UnavailableDateRangeFromJSON(json: any): UnavailableDateRange {
    return UnavailableDateRangeFromJSONTyped(json, false);
}

export function UnavailableDateRangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): UnavailableDateRange {
    if (json == null) {
        return json;
    }
    return {
        
        'startDate': (new Date(json['startDate'])),
        'endDate': (new Date(json['endDate'])),
        'source': json['source'],
    };
}

export function UnavailableDateRangeToJSON(json: any): UnavailableDateRange {
    return UnavailableDateRangeToJSONTyped(json, false);
}

export function UnavailableDateRangeToJSONTyped(value?: UnavailableDateRange | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'startDate': ((value['startDate']).toISOString().substring(0,10)),
        'endDate': ((value['endDate']).toISOString().substring(0,10)),
        'source': value['source'],
    };
}

