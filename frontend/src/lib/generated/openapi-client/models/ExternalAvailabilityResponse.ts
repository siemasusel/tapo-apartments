/* tslint:disable */
/* eslint-disable */
/**
 * TAPO Apartments API
 * API for TAPO Apartments website
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UnavailableDateRange } from './UnavailableDateRange';
import {
    UnavailableDateRangeFromJSON,
    UnavailableDateRangeFromJSONTyped,
    UnavailableDateRangeToJSON,
    UnavailableDateRangeToJSONTyped,
} from './UnavailableDateRange';

/**
 * 
 * @export
 * @interface ExternalAvailabilityResponse
 */
export interface ExternalAvailabilityResponse {
    /**
     * Apartment slug
     * @type {string}
     * @memberof ExternalAvailabilityResponse
     */
    slug: string;
    /**
     * List of unavailable date ranges from external source
     * @type {Array<UnavailableDateRange>}
     * @memberof ExternalAvailabilityResponse
     */
    unavailableDates: Array<UnavailableDateRange>;
    /**
     * Time of last successful sync
     * @type {Date}
     * @memberof ExternalAvailabilityResponse
     */
    lastSyncedAt: Date;
    /**
     * Source of the external data
     * @type {string}
     * @memberof ExternalAvailabilityResponse
     */
    source: ExternalAvailabilityResponseSourceEnum;
}


/**
 * @export
 */
export const ExternalAvailabilityResponseSourceEnum = {
    Website: 'website',
    Bookingcom: 'bookingcom'
} as const;
export type ExternalAvailabilityResponseSourceEnum = typeof ExternalAvailabilityResponseSourceEnum[keyof typeof ExternalAvailabilityResponseSourceEnum];


/**
 * Check if a given object implements the ExternalAvailabilityResponse interface.
 */
export function instanceOfExternalAvailabilityResponse(value: object): value is ExternalAvailabilityResponse {
    if (!('slug' in value) || value['slug'] === undefined) return false;
    if (!('unavailableDates' in value) || value['unavailableDates'] === undefined) return false;
    if (!('lastSyncedAt' in value) || value['lastSyncedAt'] === undefined) return false;
    if (!('source' in value) || value['source'] === undefined) return false;
    return true;
}

export function ExternalAvailabilityResponseFromJSON(json: any): ExternalAvailabilityResponse {
    return ExternalAvailabilityResponseFromJSONTyped(json, false);
}

export function ExternalAvailabilityResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExternalAvailabilityResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'slug': json['slug'],
        'unavailableDates': ((json['unavailableDates'] as Array<any>).map(UnavailableDateRangeFromJSON)),
        'lastSyncedAt': (new Date(json['lastSyncedAt'])),
        'source': json['source'],
    };
}

export function ExternalAvailabilityResponseToJSON(json: any): ExternalAvailabilityResponse {
    return ExternalAvailabilityResponseToJSONTyped(json, false);
}

export function ExternalAvailabilityResponseToJSONTyped(value?: ExternalAvailabilityResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'slug': value['slug'],
        'unavailableDates': ((value['unavailableDates'] as Array<any>).map(UnavailableDateRangeToJSON)),
        'lastSyncedAt': ((value['lastSyncedAt']).toISOString()),
        'source': value['source'],
    };
}

